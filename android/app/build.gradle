def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.5.7'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
if (file("config/key.properties").exists()) {
    keystoreProperties.load(new FileInputStream(file("config/key.properties")))
} else {
    keystoreProperties.load(new FileInputStream(file("config/default.properties")))
}

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "top.aengus.allpass"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
            storeFile file(keystoreProperties['storeFile'])
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            ndk {
                abiFilters 'arm64-v8a' // , 'armeabi-v7a'
            }
        }

        debug {
            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            }
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
